local function g(n)
    local s = game:GetService(n)
    return s
end
local a, b, c, d = g("TweenService"), g("UserInputService"), g("RunService"), g("TextService")
local nameCache = {}
local function i()
    local name = nameCache[#nameCache] or (string.char(math.random(65, 90)) .. string.char(math.random(97, 122)) .. tostring(math.random(100, 999)))
    table.insert(nameCache, name)
    return name
end

local QuickHacks = {}
QuickHacks.__index = QuickHacks

function QuickHacks:CreateWindow(k)
    local l = setmetatable({}, QuickHacks)
    l.m = k or {}
    l.n = {}
    l.o = b.TouchEnabled
    l.p = {
        Primary = Color3.fromRGB(20, 20, 25),
        Secondary = Color3.fromRGB(30, 30, 35),
        Highlight = Color3.fromRGB(0, 120, 255),
        Text = Color3.fromRGB(240, 240, 240),
        InactiveText = Color3.fromRGB(160, 160, 160),
        Dark = Color3.fromRGB(15, 15, 20),
        Shadow = Color3.fromRGB(0, 0, 0)
    }
    l.elementTheme = "Dark"
    l.menuSmall = false
    l.rainbowEnabled = false
    l.bgColor = l.p.Primary
    l.bgTransparency = 0.1
    l.withinRobloxFrame = l.m.WithinRobloxFrame or false
    l.transparency = l.m.Transparency or 0.1
    l.keybind = l.m.Keybind or "Insert"

    local q = Instance.new("ScreenGui")
    q.Name = i()
    q.Parent = g("CoreGui")
    q.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    q.ResetOnSpawn = false
    q.IgnoreGuiInset = l.withinRobloxFrame

    local r = Instance.new("Frame")
    r.Name = i()
    r.Size = UDim2.new(0, l.o and 340 or 500, 0, l.o and 260 or 500)
    r.Position = UDim2.new(0.5, -r.Size.X.Offset/2, 0.5, -r.Size.Y.Offset/2)
    r.BackgroundColor3 = l.bgColor
    r.BackgroundTransparency = l.transparency
    r.BorderSizePixel = 0
    r.Parent = q

    local rGradient = Instance.new("UIGradient")
    rGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, l.p.Primary), ColorSequenceKeypoint.new(1, l.p.Dark)}
    rGradient.Rotation = 90
    rGradient.Parent = r

    local s = Instance.new("UICorner")
    s.CornerRadius = UDim.new(0, 12)
    s.Parent = r

    local shadowStroke = Instance.new("UIStroke")
    shadowStroke.Color = l.p.Shadow
    shadowStroke.Thickness = 2
    shadowStroke.Transparency = 0.7
    shadowStroke.Parent = r

    local u = Instance.new("Frame")
    u.Size = UDim2.new(1, 0, 0, 45)
    u.BackgroundColor3 = l.p.Secondary
    u.BorderSizePixel = 0
    u.Parent = r

    local uGradient = Instance.new("UIGradient")
    uGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, l.p.Secondary), ColorSequenceKeypoint.new(1, l.p.Dark)}
    uGradient.Rotation = 90
    uGradient.Parent = u

    local v = Instance.new("UICorner")
    v.CornerRadius = UDim.new(0, 12)
    v.Parent = u

    local menuButton = Instance.new("ImageButton")
    menuButton.Size = UDim2.new(0, 30, 0, 30)
    menuButton.Position = UDim2.new(0, 10, 0, 7.5)
    menuButton.BackgroundTransparency = 1
    menuButton.Image = "rbxassetid://95867228051979"
    menuButton.Parent = u

    local xButton = Instance.new("TextButton")
    xButton.Size = UDim2.new(0, 30, 0, 30)
    xButton.Position = UDim2.new(1, -40, 0, 7.5)
    xButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    xButton.Text = "X"
    xButton.Font = Enum.Font.GothamBold
    xButton.TextSize = 16
    xButton.TextColor3 = l.p.Text
    xButton.BackgroundTransparency = 1
    xButton.BorderSizePixel = 0
    xButton.Parent = u

    local x = Instance.new("TextLabel")
    x.Size = UDim2.new(1, -50, 1, 0)
    x.Position = UDim2.new(0, 50, 0, 0)
    x.Text = l.m.Name or "QuickHacks"
    x.Font = Enum.Font.Gotham
    x.TextSize = l.o and 16 or 18
    x.TextColor3 = l.p.Text
    x.BackgroundTransparency = 1
    x.TextXAlignment = Enum.TextXAlignment.Left
    x.Parent = u

    local y = Instance.new("Frame")
    y.Size = UDim2.new(1, 0, 1, -45)
    y.Position = UDim2.new(0, 0, 0, 45)
    y.BackgroundTransparency = 1
    y.Parent = r

    local z = Instance.new("Frame")
    z.Size = UDim2.new(0, l.o and 90 or 120, 1, 0)
    z.BackgroundColor3 = l.p.Secondary
    z.BorderSizePixel = 0
    z.Parent = y

    local zGradient = Instance.new("UIGradient")
    zGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, l.p.Secondary), ColorSequenceKeypoint.new(1, l.p.Dark)}
    zGradient.Rotation = 90
    zGradient.Parent = z

    local A = Instance.new("ScrollingFrame")
    A.Size = UDim2.new(1, l.o and -95 or -125, 1, -5)
    A.Position = UDim2.new(0, l.o and 95 or 125, 0, 5)
    A.BackgroundTransparency = 1
    A.ScrollBarThickness = 3
    A.BorderSizePixel = 0
    A.CanvasSize = UDim2.new(0, 0, 0, 0)
    A.ScrollingDirection = Enum.ScrollingDirection.Y
    A.Parent = y

    local B = Instance.new("UIListLayout")
    B.SortOrder = Enum.SortOrder.LayoutOrder
    B.Padding = UDim.new(0, 10)
    B.Parent = A

    local C = Instance.new("UIPadding")
    C.PaddingTop = UDim.new(0, 10)
    C.PaddingLeft = UDim.new(0, 10)
    C.Parent = A

    B.Changed:Connect(function()
        A.CanvasSize = UDim2.new(0, 0, 0, B.AbsoluteContentSize.Y + 20)
    end)

    local D = Instance.new("ImageButton")
    D.Size = UDim2.new(0, 30, 0, 30)
    D.Position = UDim2.new(0, 10, 0, 10)
    D.BackgroundTransparency = 1
    D.Image = r.Visible and "rbxassetid://104199013389637" or "rbxassetid://117158877545612"
    D.Parent = q

    local dragging, dragInput, dragStart, startPos
    local dragConnection
    local function setupDrag(draggable)
        draggable.InputBegan:Connect(function(input)
            if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and not b:GetFocusedTextBox() then
                dragging = true
                dragStart = input.Position
                startPos = draggable.Position
                local dragConnection = c.RenderStepped:Connect(function()
                    if dragging and dragInput then
                        local delta = dragInput.Position - dragStart
                        local newPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
                        if l.withinRobloxFrame then
                            local screenSize = q.AbsoluteSize
                            local frameSize = draggable.AbsoluteSize
                            local maxX = screenSize.X - frameSize.X
                            local maxY = screenSize.Y - frameSize.Y
                            newPos = UDim2.new(
                                math.clamp(newPos.X.Scale, 0, 1),
                                math.clamp(newPos.X.Offset, 0, maxX),
                                math.clamp(newPos.Y.Scale, 0, 1),
                                math.clamp(newPos.Y.Offset, 0, maxY)
                            )
                        end
                        draggable.Position = newPos
                    end
                end)
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                        if dragConnection then dragConnection:Disconnect() end
                    end
                end)
            end
        end)
        draggable.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)
    end
    setupDrag(r)
    setupDrag(D)

    D.MouseButton1Click:Connect(function()
        r.Visible = not r.Visible
        D.Image = r.Visible and "rbxassetid://104199013389637" or "rbxassetid://117158877545612"
        a:Create(r, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Transparency = r.Visible and 0 or 1}):Play()
    end)

    b.InputBegan:Connect(function(H)
        if not l.o and H.KeyCode == Enum.KeyCode[l.keybind] then
            r.Visible = not r.Visible
            D.Image = r.Visible and "rbxassetid://104199013389637" or "rbxassetid://117158877545612"
            a:Create(r, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Transparency = r.Visible and 0 or 1}):Play()
        end
    end)

    menuButton.MouseButton1Click:Connect(function()
        l.menuSmall = not l.menuSmall
        local targetSize = l.menuSmall and 60 or (l.o and 90 or 120)
        local contentSize = l.menuSmall and -65 or (l.o and -95 or -125)
        a:Create(z, TweenInfo.new(0.4, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {Size = UDim2.new(0, targetSize, 1, 0)}):Play()
        a:Create(A, TweenInfo.new(0.4, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {Size = UDim2.new(1, contentSize, 1, -5), Position = UDim2.new(0, l.menuSmall and 65 or (l.o and 95 or 125), 0, 5)}):Play()
        for _, tab in pairs(l.n) do
            a:Create(tab.Button, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, l.menuSmall and 35 or (l.o and 40 or 45))}):Play()
            if l.menuSmall then
                tab.Button.Text = tab.Icon and "" or string.sub(tab.Name, 1, 1)
                if tab.Icon then tab.Icon.Visible = true end
            else
                tab.Button.Text = tab.Name
                if tab.Icon then tab.Icon.Visible = false end
            end
        end
    end)

    xButton.MouseButton1Click:Connect(function()
        r.Visible = not r.Visible
        D.Image = r.Visible and "rbxassetid://104199013389637" or "rbxassetid://117158877545612"
        a:Create(r, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Transparency = r.Visible and 0 or 1}):Play()
    end)

    function l:ShowUnsupportedExecutor()
        local notifyFrame = Instance.new("Frame")
        notifyFrame.Size = UDim2.new(0, 200, 0, 60)
        notifyFrame.Position = UDim2.new(0, 10, 0, 50)
        notifyFrame.BackgroundColor3 = l.bgColor
        notifyFrame.BackgroundTransparency = l.transparency
        notifyFrame.BorderSizePixel = 0
        notifyFrame.Parent = q

        local notifyGradient = Instance.new("UIGradient")
        notifyGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, l.p.Primary), ColorSequenceKeypoint.new(1, l.p.Dark)}
        notifyGradient.Rotation = 90
        notifyGradient.Parent = notifyFrame

        local notifyCorner = Instance.new("UICorner")
        notifyCorner.CornerRadius = UDim.new(0, 12)
        notifyCorner.Parent = notifyFrame

        local notifyShadow = Instance.new("UIStroke")
        notifyShadow.Color = l.p.Shadow
        notifyShadow.Thickness = 2
        notifyShadow.Transparency = 0.7
        notifyShadow.Parent = notifyFrame

        local okButton = Instance.new("TextButton")
        okButton.Size = UDim2.new(0, 60, 0, 20)
        okButton.Position = UDim2.new(0, 10, 0, 30)
        okButton.BackgroundColor3 = l.p.Highlight
        okButton.Text = "OK"
        okButton.Font = Enum.Font.Gotham
        okButton.TextSize = 10
        okButton.TextColor3 = l.p.Text
        okButton.BorderSizePixel = 0
        okButton.Parent = notifyFrame

        local okCorner = Instance.new("UICorner")
        okCorner.CornerRadius = UDim.new(0, 8)
        okCorner.Parent = okButton

        local okShadow = Instance.new("UIStroke")
        okShadow.Color = l.p.Shadow
        okShadow.Thickness = 1
        okShadow.Transparency = 0.7
        okShadow.Parent = okButton

        local exitButton = Instance.new("TextButton")
        exitButton.Size = UDim2.new(0, 60, 0, 20)
        exitButton.Position = UDim2.new(0, 80, 0, 30)
        exitButton.BackgroundColor3 = l.p.Highlight
        exitButton.Text = "Exit"
        exitButton.Font = Enum.Font.Gotham
        exitButton.TextSize = 10
        exitButton.TextColor3 = l.p.Text
        exitButton.BorderSizePixel = 0
        exitButton.Parent = notifyFrame

        local exitCorner = Instance.new("UICorner")
        exitCorner.CornerRadius = UDim.new(0, 8)
        exitCorner.Parent = exitButton

        local exitShadow = Instance.new("UIStroke")
        exitShadow.Color = l.p.Shadow
        exitShadow.Thickness = 1
        exitShadow.Transparency = 0.7
        exitShadow.Parent = exitButton

        okButton.MouseButton1Click:Connect(function()
            notifyFrame:Destroy()
        end)

        exitButton.MouseButton1Click:Connect(function()
            q:Destroy()
            notifyFrame:Destroy()
        end)

        a:Create(notifyFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(0, 200, 0, 60)}):Play()
    end

    function l:Notify(title, subtitle, iconId, duration)
        local notifyFrame = Instance.new("Frame")
        notifyFrame.Size = UDim2.new(0, 180, 0, 50)
        notifyFrame.Position = UDim2.new(0, 10, 0, 50)
        notifyFrame.BackgroundColor3 = l.bgColor
        notifyFrame.BackgroundTransparency = l.transparency
        notifyFrame.BorderSizePixel = 0
        notifyFrame.Parent = q

        local notifyGradient = Instance.new("UIGradient")
        notifyGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, l.p.Primary), ColorSequenceKeypoint.new(1, l.p.Dark)}
        notifyGradient.Rotation = 90
        notifyGradient.Parent = notifyFrame

        local notifyCorner = Instance.new("UICorner")
        notifyCorner.CornerRadius = UDim.new(0, 10)
        notifyCorner.Parent = notifyFrame

        local notifyShadow = Instance.new("UIStroke")
        notifyShadow.Color = l.p.Shadow
        notifyShadow.Thickness = 1
        notifyShadow.Transparency = 0.7
        notifyShadow.Parent = notifyFrame

        local icon = Instance.new("ImageLabel")
        if iconId then
            icon.Size = UDim2.new(0, 20, 0, 20)
            icon.Position = UDim2.new(0, 10, 0, 10)
            icon.Image = "rbxassetid://" .. iconId
            icon.BackgroundTransparency = 1
            icon.Parent = notifyFrame

            local titleLabel = Instance.new("TextLabel")
            titleLabel.Size = UDim2.new(1, -30, 0, 20)
            titleLabel.Position = UDim2.new(0, 35, 0, 10)
            titleLabel.Text = title or "Notification"
            titleLabel.Font = Enum.Font.GothamBold
            titleLabel.TextSize = 12
            titleLabel.TextColor3 = l.p.Text
            titleLabel.BackgroundTransparency = 1
            titleLabel.TextXAlignment = Enum.TextXAlignment.Left
            titleLabel.Parent = notifyFrame

            local subtitleLabel = Instance.new("TextLabel")
            subtitleLabel.Size = UDim2.new(1, -30, 0, 20)
            subtitleLabel.Position = UDim2.new(0, 35, 0, 30)
            subtitleLabel.Text = subtitle or ""
            subtitleLabel.Font = Enum.Font.Gotham
            subtitleLabel.TextSize = 10
            subtitleLabel.TextColor3 = l.p.InactiveText
            subtitleLabel.BackgroundTransparency = 1
            subtitleLabel.TextXAlignment = Enum.TextXAlignment.Left
            subtitleLabel.Parent = notifyFrame
        else
            local titleLabel = Instance.new("TextLabel")
            titleLabel.Size = UDim2.new(1, -20, 0, 20)
            titleLabel.Position = UDim2.new(0, 10, 0, 10)
            titleLabel.Text = title or "Notification"
            titleLabel.Font = Enum.Font.GothamBold
            titleLabel.TextSize = 14
            titleLabel.TextColor3 = l.p.Text
            titleLabel.BackgroundTransparency = 1
            titleLabel.TextXAlignment = Enum.TextXAlignment.Left
            titleLabel.Parent = notifyFrame

            local subtitleLabel = Instance.new("TextLabel")
            subtitleLabel.Size = UDim2.new(1, -20, 0, 20)
            subtitleLabel.Position = UDim2.new(0, 10, 0, 30)
            subtitleLabel.Text = subtitle or ""
            subtitleLabel.Font = Enum.Font.Gotham
            subtitleLabel.TextSize = 10
            subtitleLabel.TextColor3 = l.p.InactiveText
            subtitleLabel.BackgroundTransparency = 0.5
            subtitleLabel.TextXAlignment = Enum.TextXAlignment.Left
            subtitleLabel.Parent = notifyFrame
        end

        a:Create(notifyFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(0, 180, 0, 50)}):Play()
        wait(duration or 3)
        a:Create(notifyFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Size = UDim2.new(0, 0, 0, 0)}):Play()
        wait(0.3)
        notifyFrame:Destroy()
    end

    function l:CreateTab(H, iconId)
        local I = {}
        local J = Instance.new("TextButton")
        J.Size = UDim2.new(1, 0, 0, l.o and 40 or 45)
        J.BackgroundTransparency = 1
        J.Text = H
        J.Font = Enum.Font.Gotham
        J.TextSize = l.o and 14 or 16
        J.TextColor3 = l.p.InactiveText
        J.BorderSizePixel = 0
        J.Parent = z
        J.Position = UDim2.new(0, 0, 0, (#l.n) * 40)

        local J_Icon = iconId and Instance.new("ImageLabel") or nil
        if J_Icon then
            J_Icon.Size = UDim2.new(0, 20, 0, 20)
            J_Icon.Position = UDim2.new(0, 10, 0.5, -10)
            J_Icon.Image = "rbxassetid://" .. iconId
            J_Icon.BackgroundTransparency = 1
            J_Icon.Visible = false
            J_Icon.Parent = J
        end

        local J_Indicator = Instance.new("Frame")
        J_Indicator.Size = UDim2.new(0, 3, 0, 20)
        J_Indicator.Position = UDim2.new(0, 0, 0.5, -10)
        J_Indicator.BackgroundColor3 = l.p.Highlight
        J_Indicator.BorderSizePixel = 0
        J_Indicator.Visible = false
        J_Indicator.Parent = J

        local J_Corner = Instance.new("UICorner")
        J_Corner.CornerRadius = UDim.new(0, 8)
        J_Corner.Parent = J_Indicator

        local K = Instance.new("Frame")
        K.Size = UDim2.new(1, 0, 1, 0)
        K.BackgroundTransparency = 1
        K.Parent = A

        local L = Instance.new("UIListLayout")
        L.SortOrder = Enum.SortOrder.LayoutOrder
        L.Padding = UDim.new(0, 10)
        L.Parent = K

        local M = Instance.new("UIPadding")
        M.PaddingTop = UDim.new(0, 10)
        M.PaddingLeft = UDim.new(0, 10)
        M.Parent = K

        local A_tab = Instance.new("ScrollingFrame")
        A_tab.Size = UDim2.new(1, 0, 1, 0)
        A_tab.BackgroundTransparency = 1
        A_tab.ScrollBarThickness = 3
        A_tab.BorderSizePixel = 0
        A_tab.CanvasSize = UDim2.new(0, 0, 0, 0)
        A_tab.ScrollingDirection = Enum.ScrollingDirection.Y
        A_tab.Parent = K

        local B_tab = Instance.new("UIListLayout")
        B_tab.SortOrder = Enum.SortOrder.LayoutOrder
        B_tab.Padding = UDim.new(0, 10)
        B_tab.Parent = A_tab

        local C_tab = Instance.new("UIPadding")
        C_tab.PaddingTop = UDim.new(0, 10)
        C_tab.PaddingLeft = UDim.new(0, 10)
        C_tab.Parent = A_tab

        B_tab.Changed:Connect(function()
            A_tab.CanvasSize = UDim2.new(0, 0, 0, B_tab.AbsoluteContentSize.Y + 20)
        end)

        table.insert(l.n, {Name = H, Frame = K, Button = J, Indicator = J_Indicator, Icon = J_Icon, Scroll = A_tab})

        J.MouseButton1Click:Connect(function()
            for _, O in pairs(l.n) do
                O.Frame.Visible = O.Name == H
                O.Button.TextColor3 = O.Name == H and l.p.Text or l.p.InactiveText
                O.Indicator.Visible = O.Name == H
                a:Create(O.Indicator, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = O.Name == H and UDim2.new(0, 4, 0, 24) or UDim2.new(0, 3, 0, 20)}):Play()
            end
        end)

        if #l.n == 1 then
            J.TextColor3 = l.p.Text
            J_Indicator.Visible = true
        end

        if H == "Settings" and #l.n > 1 then
            table.remove(l.n, #l.n)
            table.insert(l.n, {Name = H, Frame = K, Button = J, Indicator = J_Indicator, Icon = J_Icon, Scroll = A_tab})
        end

        function I:CreateLabel(N)
            local O = Instance.new("Frame")
            O.BackgroundTransparency = 1
            O.Parent = A_tab

            local P = Instance.new("TextLabel")
            P.Text = N.Text or "Label"
            P.Font = Enum.Font.Gotham
            P.TextSize = l.o and 14 or 16
            P.TextColor3 = l.p.Text
            P.BackgroundTransparency = 1
            P.TextXAlignment = Enum.TextXAlignment.Left
            P.Parent = O

            local function updateSize()
                local size = d:GetTextSize(P.Text, P.TextSize, P.Font, Vector2.new(math.huge, math.huge))
                O.Size = UDim2.new(1, -12, 0, math.max(l.o and 25 or 30, size.Y + 6))
                a:Create(P, TweenInfo.new(0.2), {Size = UDim2.new(1, -12, 0, size.Y)}):Play()
            end

            updateSize()
            return {UpdateText = function(Q) P.Text = Q or P.Text; updateSize() end}
        end

        function I:CreateToggle(W)
            local X = Instance.new("Frame")
            X.Size = UDim2.new(1, -12, 0, l.o and 40 or 50)
            X.BackgroundTransparency = 1
            X.Parent = A_tab

            local Y = Instance.new("TextLabel")
            Y.Size = UDim2.new(1, -50, 0.5, 0)
            Y.Text = W.Name or "Toggle"
            Y.Font = Enum.Font.Gotham
            Y.TextSize = l.o and 14 or 16
            Y.TextColor3 = l.p.Text
            Y.BackgroundTransparency = 1
            Y.TextXAlignment = Enum.TextXAlignment.Left
            Y.Parent = X

            local Z = Instance.new("Frame")
            Z.Size = UDim2.new(0, l.o and 40 or 50, 0, l.o and 20 or 25)
            Z.Position = UDim2.new(1, l.o and -45 or -60, 0.5, l.o and -10 or -12.5)
            Z.BackgroundColor3 = l.p.Secondary
            Z.BorderSizePixel = 0
            Z.Parent = X

            local ZCorner = Instance.new("UICorner")
            ZCorner.CornerRadius = UDim.new(0, 12)
            ZCorner.Parent = Z

            local a1 = W.CurrentValue or false
            local a2 = Instance.new("Frame")
            a2.Size = UDim2.new(0, l.o and 16 or 20, 0, l.o and 16 or 20)
            a2.Position = a1 and UDim2.new(1, l.o and -20 or -25, 0.5, l.o and -8 or -10) or UDim2.new(0, 2, 0.5, l.o and -8 or -10)
            a2.BackgroundColor3 = a1 and l.p.Highlight or l.p.Text
            a2.BorderSizePixel = 0
            a2.Parent = Z

            local a3 = Instance.new("UICorner")
            a3.CornerRadius = UDim.new(0, 12)
            a3.Parent = a2

            local function a4(a5)
                a1 = a5
                local a6 = a5 and l.p.Highlight or l.p.Secondary
                local a7 = l.p.Text
                local a8 = a5 and UDim2.new(1, l.o and -20 or -25, 0.5, l.o and -8 or -10) or UDim2.new(0, 2, 0.5, l.o and -8 or -10)
                a:Create(Z, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = a6}):Play()
                a:Create(a2, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = a8, BackgroundColor3 = a7}):Play()
                if W.Callback then pcall(W.Callback, a1) end
            end

            Z.InputBegan:Connect(function(a9)
                if a9.UserInputType == Enum.UserInputType.MouseButton1 or (l.o and a9.UserInputType == Enum.UserInputType.Touch) then
                    a4(not a1)
                end
            end)

            return {SetValue = a4}
        end

        function I:CreateButton(R)
            local S = Instance.new("Frame")
            S.Size = UDim2.new(1, -12, 0, l.o and 35 or 40)
            S.BackgroundTransparency = 1
            S.Parent = A_tab

            local T = Instance.new("TextButton")
            T.Size = UDim2.new(1, 0, 1, 0)
            T.BackgroundColor3 = l.p.Highlight
            T.Text = R.Name or "Button"
            T.Font = Enum.Font.Gotham
            T.TextSize = l.o and 14 or 16
            T.TextColor3 = l.p.Text
            T.BorderSizePixel = 0
            T.Parent = S

            local TCorner = Instance.new("UICorner")
            TCorner.CornerRadius = UDim.new(0, 10)
            TCorner.Parent = T

            local TShadow = Instance.new("UIStroke")
            TShadow.Color = l.p.Shadow
            TShadow.Thickness = 1
            TShadow.Transparency = 0.7
            TShadow.Parent = T

            T.MouseButton1Click:Connect(function()
                a:Create(T, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = l.p.Highlight}):Play()
                wait(0.1)
                a:Create(T, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = l.p.Highlight}):Play()
                if R.Callback then pcall(R.Callback) end
            end)

            return T
        end

        function I:CreateSlider(aa)
            local ab = Instance.new("Frame")
            ab.Size = UDim2.new(1, -12, 0, l.o and 40 or 50)
            ab.BackgroundTransparency = 1
            ab.Parent = A_tab

            local ac = Instance.new("TextLabel")
            ac.Size = UDim2.new(1, -40, 0, l.o and 20 or 25)
            ac.Text = aa.Name or "Slider"
            ac.Font = Enum.Font.Gotham
            ac.TextSize = l.o and 12 or 14
            ac.TextColor3 = l.p.Text
            ac.BackgroundTransparency = 1
            ac.TextXAlignment = Enum.TextXAlignment.Left
            ac.Parent = ab

            local ad = Instance.new("TextLabel")
            ad.Size = UDim2.new(0, 40, 0, l.o and 20 or 25)
            ad.Position = UDim2.new(1, -40, 0, 0)
            ad.Text = tostring(aa.CurrentValue or aa.Min or 0)
            ad.Font = Enum.Font.Gotham
            ad.TextSize = l.o and 10 or 12
            ad.TextColor3 = l.p.Highlight
            ad.BackgroundTransparency = 1
            ad.TextXAlignment = Enum.TextXAlignment.Right
            ad.Parent = ab

            local ae = Instance.new("Frame")
            ae.Size = UDim2.new(1, 0, 0, 6)
            ae.Position = UDim2.new(0, 0, 0, l.o and 25 or 30)
            ae.BackgroundColor3 = l.p.Secondary
            ae.BorderSizePixel = 0
            ae.Parent = ab

            local aeCorner = Instance.new("UICorner")
            aeCorner.CornerRadius = UDim.new(0, 3)
            aeCorner.Parent = ae

            local ag = Instance.new("Frame")
            ag.Size = UDim2.new(0, 0, 1, 0)
            ag.BackgroundColor3 = l.p.Highlight
            ag.BorderSizePixel = 0
            ag.Parent = ae

            local agCorner = Instance.new("UICorner")
            agCorner.CornerRadius = UDim.new(0, 3)
            agCorner.Parent = ag

            local ai = Instance.new("Frame")
            ai.Size = UDim2.new(0, 12, 0, 12)
            ai.Position = UDim2.new(0, -6, 0, -3)
            ai.BackgroundColor3 = l.p.Text
            ai.BorderSizePixel = 0
            ai.Parent = ae

            local aiCorner = Instance.new("UICorner")
            aiCorner.CornerRadius = UDim.new(0, 6)
            aiCorner.Parent = ai

            local al = aa.CurrentValue or aa.Min or 0
            local am = aa.Min or 0
            local an = aa.Max or 100
            local ao = false

            local function ap(aq)
                local ar = math.clamp(aq, am, an)
                al = math.floor(ar * 100) / 100
                ad.Text = tostring(al)
                local as = (al - am) / (an - am)
                a:Create(ag, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(as, 0, 1, 0)}):Play()
                a:Create(ai, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(as, -6, 0, -3)}):Play()
                if aa.Callback then pcall(aa.Callback, al) end
            end

            ae.InputBegan:Connect(function(at)
                if at.UserInputType == Enum.UserInputType.MouseButton1 or (l.o and at.UserInputType == Enum.UserInputType.Touch) then
                    ao = true
                    local connection = c.Heartbeat:Connect(function()
                        if ao then
                            local av = b:GetMouseLocation()
                            local aw = ae.AbsolutePosition.X
                            local ax = ae.AbsoluteSize.X
                            local ay = (av.X - aw) / ax
                            local az = am + (an - am) * math.clamp(ay, 0, 1)
                            ap(az)
                        end
                    end)
                    at.Changed:Connect(function()
                        if at.UserInputState == Enum.UserInputState.End then
                            ao = false
                            connection:Disconnect()
                        end
                    end)
                end
            end)

            ap(al)
            return {SetValue = ap}
        end

        function I:CreateDropdown(aA)
            local aB = Instance.new("Frame")
            aB.Size = UDim2.new(1, -12, 0, l.o and 35 or 40)
            aB.BackgroundColor3 = l.p.Secondary
            aB.BorderSizePixel = 0
            aB.Parent = A_tab

            local aBCorner = Instance.new("UICorner")
            aBCorner.CornerRadius = UDim.new(0, 10)
            aBCorner.Parent = aB

            local aE = Instance.new("TextButton")
            aE.Size = UDim2.new(1, -30, 1, 0)
            aE.BackgroundTransparency = 1
            aE.Text = aA.CurrentOption or aA.Options[1] or "Select"
            aE.Font = Enum.Font.Gotham
            aE.TextSize = l.o and 12 or 14
            aE.TextColor3 = l.p.Text
            aE.BorderSizePixel = 0
            aE.TextXAlignment = Enum.TextXAlignment.Left
            aE.Parent = aB

            local aF = Instance.new("TextLabel")
            aF.Size = UDim2.new(0, 20, 1, 0)
            aF.Position = UDim2.new(1, -25, 0, 0)
            aF.Text = "▼"
            aF.Font = Enum.Font.Gotham
            aF.TextSize = l.o and 10 or 12
            aF.TextColor3 = l.p.Text
            aF.BackgroundTransparency = 1
            aF.Parent = aB

            local aG = Instance.new("Frame")
            aG.Size = UDim2.new(1, 0, 0, 0)
            aG.Position = UDim2.new(0, 0, 1, 5)
            aG.BackgroundColor3 = l.bgColor
            aG.BackgroundTransparency = l.transparency
            aG.BorderSizePixel = 0
            aG.Visible = false
            aG.ClipsDescendants = true
            aG.Parent = A_tab

            local aH = Instance.new("UICorner")
            aH.CornerRadius = UDim.new(0, 10)
            aH.Parent = aG

            local aI = Instance.new("UIStroke")
            aI.Color = l.p.Shadow
            aI.Thickness = 1
            aI.Transparency = 0.7
            aI.Parent = aG

            local aJ = false
            local aK = aA.CurrentOption or aA.Options[1] or ""

            local dropdownContent = Instance.new("UIListLayout")
            dropdownContent.SortOrder = Enum.SortOrder.LayoutOrder
            dropdownContent.Padding = UDim.new(0, 5)
            dropdownContent.Parent = aG

            for aL, aM in pairs(aA.Options or {}) do
                local aN = Instance.new("TextButton")
                aN.Size = UDim2.new(1, -10, 0, l.o and 25 or 30)
                aN.BackgroundColor3 = l.p.Secondary
                aN.BorderSizePixel = 0
                aN.Text = aM
                aN.Font = Enum.Font.Gotham
                aN.TextSize = l.o and 12 or 14
                aN.TextColor3 = l.p.Text
                aN.Parent = aG

                local aNCorner = Instance.new("UICorner")
                aNCorner.CornerRadius = UDim.new(0, 8)
                aNCorner.Parent = aN

                aN.MouseButton1Click:Connect(function()
                    aK = aM
                    aE.Text = aM
                    aJ = false
                    aG.Visible = false
                    a:Create(A_tab, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CanvasSize = UDim2.new(0, 0, 0, B_tab.AbsoluteContentSize.Y + 20)}):Play()
                    a:Create(aG, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, 0)}):Play()
                    a:Create(aF, TweenInfo.new(0.1), {Rotation = 0}):Play()
                    if aA.Callback then pcall(aA.Callback, aM) end
                end)
            end

            aE.MouseButton1Click:Connect(function()
                aJ = not aJ
                aG.Visible = aJ
                local aO = aJ and (#aA.Options * (l.o and 25 or 30) + (#aA.Options - 1) * 5) or 0
                a:Create(A_tab, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CanvasSize = UDim2.new(0, 0, 0, B_tab.AbsoluteContentSize.Y + aO + 30)}):Play()
                a:Create(aG, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(1, 0, 0, aO)}):Play()
                a:Create(aF, TweenInfo.new(0.1), {Rotation = aJ and 180 or 0}):Play()
            end)

            return {UpdateOptions = function(aP)
                aG:ClearAllChildren()
                dropdownContent.Parent = aG
                for aQ, aR in pairs(aP) do
                    local aS = Instance.new("TextButton")
                    aS.Size = UDim2.new(1, -10, 0, l.o and 25 or 30)
                    aS.BackgroundColor3 = l.p.Secondary
                    aS.BorderSizePixel = 0
                    aS.Text = aR
                    aS.Font = Enum.Font.Gotham
                    aS.TextSize = l.o and 12 or 14
                    aS.TextColor3 = l.p.Text
                    aS.Parent = aG

                    local aSCorner = Instance.new("UICorner")
                    aSCorner.CornerRadius = UDim.new(0, 8)
                    aSCorner.Parent = aS

                    aS.MouseButton1Click:Connect(function()
                        aK = aR
                        aE.Text = aR
                        if aA.Callback then pcall(aA.Callback, aR) end
                    end)
                end
            end}
        end

        function I:CreateTextbox(aT)
            local aU = Instance.new("Frame")
            aU.Size = UDim2.new(1, -12, 0, l.o and 60 or 70)
            aU.BackgroundTransparency = 1
            aU.Parent = A_tab

            local aV = Instance.new("TextLabel")
            aV.Size = UDim2.new(1, 0, 0, l.o and 20 or 25)
            aV.Text = aT.Name or "Textbox"
            aV.Font = Enum.Font.Gotham
            aV.TextSize = l.o and 12 or 14
            aV.TextColor3 = l.p.Text
            aV.BackgroundTransparency = 1
            aV.TextXAlignment = Enum.TextXAlignment.Left
            aV.Parent = aU

            local aW = Instance.new("Frame")
            aW.Size = UDim2.new(1, 0, 0, l.o and 30 or 35)
            aW.Position = UDim2.new(0, 0, 0, l.o and 25 or 30)
            aW.BackgroundColor3 = l.p.Secondary
            aW.BorderSizePixel = 0
            aW.Parent = aU

            local aWCorner = Instance.new("UICorner")
            aWCorner.CornerRadius = UDim.new(0, 10)
            aWCorner.Parent = aW

            local aY = Instance.new("UIStroke")
            aY.Color = l.p.Dark
            aY.Thickness = 1
            aY.Parent = aW

            local aZ = Instance.new("TextBox")
            aZ.Size = UDim2.new(1, -10, 1, 0)
            aZ.Position = UDim2.new(0, 5, 0, 0)
            aZ.BackgroundTransparency = 1
            aZ.Text = aT.CurrentText or ""
            aZ.PlaceholderText = aT.PlaceholderText or "Enter text..."
            aZ.Font = Enum.Font.Gotham
            aZ.TextSize = l.o and 12 or 14
            aZ.TextColor3 = l.p.Text
            aZ.PlaceholderColor3 = l.p.InactiveText
            aZ.BorderSizePixel = 0
            aZ.Parent = aW

            aZ.Focused:Connect(function()
                a:Create(aY, TweenInfo.new(0.2), {Color = l.p.Highlight}):Play()
            end)

            aZ.FocusLost:Connect(function()
                a:Create(aY, TweenInfo.new(0.2), {Color = l.p.Dark}):Play()
                if aT.Callback then pcall(aT.Callback, aZ.Text) end
            end)

            return {SetText = function(a_) aZ.Text = a_ end, GetText = function() return aZ.Text end}
        end

        function I:CreateColorPicker(b0)
            local b1 = b0.Color or Color3.fromRGB(255, 255, 255)
            local b2 = false
            local h, s, v = b1:ToHSV()

            local b4 = Instance.new("Frame")
            b4.Size = UDim2.new(1, -12, 0, l.o and 35 or 40)
            b4.BackgroundTransparency = 1
            b4.Parent = A_tab

            local b5 = Instance.new("TextButton")
            b5.Size = UDim2.new(1, 0, 1, 0)
            b5.BackgroundColor3 = l.p.Secondary
            b5.Text = b0.Name or "ColorPicker"
            b5.Font = Enum.Font.Gotham
            b5.TextSize = l.o and 12 or 14
            b5.TextColor3 = l.p.Text
            b5.BorderSizePixel = 0
            b5.Parent = b4

            local b5Corner = Instance.new("UICorner")
            b5Corner.CornerRadius = UDim.new(0, 10)
            b5Corner.Parent = b5

            local colorPreview = Instance.new("Frame")
            colorPreview.Size = UDim2.new(0, l.o and 25 or 30, 0, l.o and 25 or 30)
            colorPreview.Position = UDim2.new(1, l.o and -35 or -40, 0.5, 0)
            colorPreview.AnchorPoint = Vector2.new(1, 0.5)
            colorPreview.BackgroundColor3 = b1
            colorPreview.BorderSizePixel = 0
            colorPreview.Parent = b5

            local cpPreviewCorner = Instance.new("UICorner")
            cpPreviewCorner.CornerRadius = UDim.new(0, 10)
            cpPreviewCorner.Parent = colorPreview

            local colorPickerFrame = Instance.new("Frame")
            colorPickerFrame.Size = UDim2.new(0, l.o and 180 or 220, 0, l.o and 180 or 220)
            colorPickerFrame.Position = UDim2.new(0, 0, 1, 15)
            colorPickerFrame.BackgroundColor3 = l.bgColor
            colorPickerFrame.BackgroundTransparency = l.transparency
            colorPickerFrame.BorderSizePixel = 0
            colorPickerFrame.Visible = false
            colorPickerFrame.ClipsDescendants = true
            colorPickerFrame.Parent = A_tab

            local cpCorner = Instance.new("UICorner")
            cpCorner.CornerRadius = UDim.new(0, 12)
            cpCorner.Parent = colorPickerFrame

            local cpShadow = Instance.new("UIStroke")
            cpShadow.Color = l.p.Shadow
            cpShadow.Thickness = 1
            cpShadow.Transparency = 0.7
            cpShadow.Parent = colorPickerFrame

            local hueBar = Instance.new("Frame")
            hueBar.Size = UDim2.new(0, 15, 0, l.o and 140 or 180)
            hueBar.Position = UDim2.new(0, 10, 0, 10)
            hueBar.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
            hueBar.BorderSizePixel = 0
            hueBar.Parent = colorPickerFrame

            local hueBarCorner = Instance.new("UICorner")
            hueBarCorner.CornerRadius = UDim.new(0, 4)
            hueBarCorner.Parent = hueBar

            local hueGradient = Instance.new("UIGradient")
            hueGradient.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
                ColorSequenceKeypoint.new(0.17, Color3.fromRGB(255, 255, 0)),
                ColorSequenceKeypoint.new(0.33, Color3.fromRGB(0, 255, 0)),
                ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 255)),
                ColorSequenceKeypoint.new(0.67, Color3.fromRGB(0, 0, 255)),
                ColorSequenceKeypoint.new(0.83, Color3.fromRGB(255, 0, 255)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))
            }
            hueGradient.Rotation = 270
            hueGradient.Parent = hueBar

            local hueIndicator = Instance.new("Frame")
            hueIndicator.Size = UDim2.new(1, 0, 0, 3)
            hueIndicator.BackgroundColor3 = l.p.Text
            hueIndicator.BorderSizePixel = 0
            hueIndicator.Parent = hueBar

            local sbSelector = Instance.new("Frame")
            sbSelector.Size = UDim2.new(0, l.o and 140 or 180, 0, l.o and 140 or 180)
            sbSelector.Position = UDim2.new(0, 30, 0, 10)
            sbSelector.BackgroundColor3 = Color3.fromHSV(h, 1, 1)
            sbSelector.BorderSizePixel = 0
            sbSelector.Parent = colorPickerFrame

            local sbCorner = Instance.new("UICorner")
            sbCorner.CornerRadius = UDim.new(0, 12)
            sbCorner.Parent = sbSelector

            local sbGradient = Instance.new("UIGradient")
            sbGradient.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
            }
            sbGradient.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 1)}
            sbGradient.Parent = sbSelector

            local sbWhiteGradient = Instance.new("UIGradient")
            sbWhiteGradient.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
            }
            sbWhiteGradient.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 0)}
            sbWhiteGradient.Parent = sbSelector

            local sbIndicator = Instance.new("Frame")
            sbIndicator.Size = UDim2.new(0, 8, 0, 8)
            sbIndicator.BackgroundColor3 = l.p.Text
            sbIndicator.BorderSizePixel = 0
            sbIndicator.Parent = sbSelector

            local sbICorner = Instance.new("UICorner")
            sbICorner.CornerRadius = UDim.new(0.5, 0)
            sbICorner.Parent = sbIndicator

            local rainbowToggle = Instance.new("TextButton")
            rainbowToggle.Size = UDim2.new(0, 70, 0, 20)
            rainbowToggle.Position = UDim2.new(0, 10, 1, -30)
            rainbowToggle.BackgroundColor3 = l.p.Secondary
            rainbowToggle.Text = "Rainbow"
            rainbowToggle.Font = Enum.Font.Gotham
            rainbowToggle.TextSize = 12
            rainbowToggle.TextColor3 = l.p.Text
            rainbowToggle.BorderSizePixel = 0
            rainbowToggle.Parent = colorPickerFrame

            local rainbowToggleCorner = Instance.new("UICorner")
            rainbowToggleCorner.CornerRadius = UDim.new(0, 10)
            rainbowToggleCorner.Parent = rainbowToggle

            local rainbowToggleStroke = Instance.new("UIStroke")
            rainbowToggleStroke.Color = l.p.Shadow
            rainbowToggleStroke.Thickness = 1
            rainbowToggleStroke.Transparency = 0.7
            rainbowToggleStroke.Parent = rainbowToggle

            local rainbowState = false
            rainbowToggle.MouseButton1Click:Connect(function()
                rainbowState = not rainbowState
                l.rainbowEnabled = rainbowState
                a:Create(rainbowToggle, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = rainbowState and l.p.Highlight or l.p.Secondary}):Play()
                updateColor()
            end)

            local function updateColor()
                local newColor = rainbowState and Color3.fromHSV(tick() % 1, 1, 1) or Color3.fromHSV(h, s, v)
                sbSelector.BackgroundColor3 = rainbowState and Color3.fromHSV(tick() % 1, 1, 1) or Color3.fromHSV(h, 1, 1)
                colorPreview.BackgroundColor3 = newColor
                if b0.Callback then pcall(b0.Callback, newColor) end
            end

            spawn(function()
                while wait(1/60) do
                    if rainbowState then updateColor() end
                end
            end)

            hueBar.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or (l.o and input.UserInputType == Enum.UserInputType.Touch) then
                    local connection = c.Heartbeat:Connect(function()
                        local mousePos = b:GetMouseLocation()
                        local barPos = hueBar.AbsolutePosition
                        local barSize = hueBar.AbsoluteSize.Y
                        local newH = 1 - math.clamp((mousePos.Y - barPos.Y) / barSize, 0, 1)
                        h = newH
                        hueIndicator.Position = UDim2.new(0, 0, 1 - newH, -1.5)
                        updateColor()
                    end)
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then connection:Disconnect() end
                    end)
                end
            end)

            sbSelector.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or (l.o and input.UserInputType == Enum.UserInputType.Touch) then
                    local connection = c.Heartbeat:Connect(function()
                        local mousePos = b:GetMouseLocation()
                        local selectorPos = sbSelector.AbsolutePosition
                        local selectorSize = sbSelector.AbsoluteSize
                        s = math.clamp((mousePos.X - selectorPos.X) / selectorSize.X, 0, 1)
                        v = 1 - math.clamp((mousePos.Y - selectorPos.Y) / selectorSize.Y, 0, 1)
                        sbIndicator.Position = UDim2.new(s, -4, 1 - v, -4)
                        updateColor()
                    end)
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then connection:Disconnect() end
                    end)
                end
            end)

            b5.MouseButton1Click:Connect(function()
                b2 = not b2
                colorPickerFrame.Visible = b2
                a:Create(A_tab, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {CanvasSize = UDim2.new(0, 0, 0, B_tab.AbsoluteContentSize.Y + (b2 and (l.o and 180 or 220) or 0) + 20)}):Play()
                a:Create(colorPickerFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = b2 and UDim2.new(0, l.o and 180 or 220, 0, l.o and 180 or 220) or UDim2.new(0, 0, 0, 0)}):Play()
            end)

            hueIndicator.Position = UDim2.new(0, 0, 1 - h, -1.5)
            sbIndicator.Position = UDim2.new(s, -4, 1 - v, -4)

            return {SetColor = function(bu)
                b1 = bu
                h, s, v = bu:ToHSV()
                updateColor()
                hueIndicator.Position = UDim2.new(0, 0, 1 - h, -1.5)
                sbIndicator.Position = UDim2.new(s, -4, 1 - v, -4)
            end}
        end

        function I:CreateKeybind(kb)
            local kbFrame = Instance.new("Frame")
            kbFrame.Size = UDim2.new(1, -12, 0, l.o and 40 or 50)
            kbFrame.BackgroundTransparency = 1
            kbFrame.Parent = A_tab

            local kbTitle = Instance.new("TextLabel")
            kbTitle.Size = UDim2.new(1, -110, 0.5, 0)
            kbTitle.Text = kb.Title or "Keybind"
            kbTitle.Font = Enum.Font.Gotham
            kbTitle.TextSize = l.o and 14 or 16
            kbTitle.TextColor3 = l.p.Text
            kbTitle.BackgroundTransparency = 1
            kbTitle.TextXAlignment = Enum.TextXAlignment.Left
            kbTitle.Parent = kbFrame

            local kbDisplay = Instance.new("TextButton")
            kbDisplay.Size = UDim2.new(0, 90, 0, 25)
            kbDisplay.Position = UDim2.new(1, -10, 0.300000012, 0)
            kbDisplay.AnchorPoint = Vector2.new(1, 0.5)
            kbDisplay.BackgroundColor3 = l.p.Secondary
            kbDisplay.Text = kb.Default or "None"
            kbDisplay.Font = Enum.Font.Gotham
            kbDisplay.TextSize = 13
            kbDisplay.TextColor3 = l.p.Text
            kbDisplay.BorderSizePixel = 0
            kbDisplay.Parent = kbFrame

            local kbCorner = Instance.new("UICorner")
            kbCorner.CornerRadius = UDim.new(0, 6)
            kbCorner.Parent = kbDisplay

            local kbStroke = Instance.new("UIStroke")
            kbStroke.Color = l.p.Shadow
            kbStroke.Thickness = 1
            kbStroke.Transparency = 0.5
            kbStroke.Parent = kbDisplay

            local kbDots = Instance.new("TextLabel")
            kbDots.Size = UDim2.new(0, 0, 0, 14)
            kbDots.Position = UDim2.new(0.5, 0, 0.5, 0)
            kbDots.AnchorPoint = Vector2.new(0.5, 0.5)
            kbDots.Text = "."
            kbDots.Font = Enum.Font.Gotham
            kbDots.TextSize = 13
            kbDots.TextColor3 = l.p.Text
            kbDots.BackgroundTransparency = 1
            kbDots.Visible = false
            kbDots.Parent = kbDisplay

            local picking = false
            local value = kb.Default or "None"
            local toggled = false
            local mode = kb.Mode or "Toggle"

            local function updateDots()
                if picking then
                    kbDots.Visible = true
                    local dots = ""
                    spawn(function()
                        while picking do
                            for i = 1, 4 do
                                dots = string.rep(".", i)
                                kbDots.Text = dots
                                wait(0.2)
                                if not picking then break end
                            end
                        end
                    end)
                else
                    kbDots.Visible = false
                end
            end

            kbDisplay.MouseButton1Click:Connect(function()
                if not picking then
                    picking = true
                    kbDisplay.Text = ""
                    a:Create(kbStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Thickness = 2, Transparency = 0}):Play()
                    updateDots()
                    local connection
                    connection = b.InputBegan:Connect(function(input)
                        if picking then
                            local key
                            if input.UserInputType == Enum.UserInputType.Keyboard then
                                key = input.KeyCode.Name
                            elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
                                key = "MouseLeft"
                            elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
                                key = "MouseRight"
                            end
                            if key then
                                value = key
                                kbDisplay.Text = value
                                picking = false
                                a:Create(kbStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Thickness = 1, Transparency = 0.5}):Play()
                                updateDots()
                                connection:Disconnect()
                                if kb.ChangedCallback then pcall(kb.ChangedCallback, value) end
                            end
                        end
                    end)
                end
            end)

            b.InputBegan:Connect(function(input)
                if not picking and not b:GetFocusedTextBox() then
                    if mode == "Toggle" then
                        if value == "MouseLeft" and input.UserInputType == Enum.UserInputType.MouseButton1 or
                           value == "MouseRight" and input.UserInputType == Enum.UserInputType.MouseButton2 or
                           input.KeyCode.Name == value then
                            toggled = not toggled
                            a:Create(kbStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Thickness = toggled and 2 or 1, Transparency = toggled and 0 or 0.5}):Play()
                            if kb.Callback then pcall(kb.Callback, toggled) end
                        end
                    elseif mode == "Hold" then
                        if value == "MouseLeft" and input.UserInputType == Enum.UserInputType.MouseButton1 or
                           value == "MouseRight" and input.UserInputType == Enum.UserInputType.MouseButton2 or
                           input.KeyCode.Name == value then
                            toggled = true
                            a:Create(kbStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Thickness = 2, Transparency = 0}):Play()
                            if kb.Callback then pcall(kb.Callback, toggled) end
                        end
                    end
                end
            end)

            b.InputEnded:Connect(function(input)
                if mode == "Hold" then
                    if value == "MouseLeft" and input.UserInputType == Enum.UserInputType.MouseButton1 or
                       value == "MouseRight" and input.UserInputType == Enum.UserInputType.MouseButton2 or
                       input.KeyCode.Name == value then
                        toggled = false
                        a:Create(kbStroke, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Thickness = 1, Transparency = 0.5}):Play()
                        if kb.Callback then pcall(kb.Callback, toggled) end
                    end
                end
            end)

            return {SetValue = function(key, mode) value = key or value; mode = mode or mode; kbDisplay.Text = value end}
        end

        return I
    end

    local success, err = pcall(function()
        loadstring("local a = 1 + 1")()
    end)
    if not success then
        l:ShowUnsupportedExecutor()
    end

    return l
end

return QuickHacks
